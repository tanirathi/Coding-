class Solution
{
    public:
    void merge(int arr[], int low, int mid, int high)
    {
        vector<int> temp;
        int left=low;
        int right=mid+1;
        while(left<=mid && right<=high )
        {
            if(arr[left]>=arr[right]   )
            {
                temp.push_back(arr[right]);
                right++;
            }
            else
            {
                temp.push_back(arr[left]);
              left++;
            }
        }
        while(left<=mid)
        {
            temp.push_back(arr[left]);
            left++;
        }
        while(right<=high)
        {
            temp.push_back(arr[right]);
            right++;
        }
        for(int i=low;i<=high;i++)
        {
            
            arr[i]=temp[i-low];
        }
    }
    public:
    void mergeSort(int arr[], int low, int r)
    {
        if(low>=r)
        return ;
        {
            int mid=(low+r)/2;
            mergeSort(arr,low,mid);
            mergeSort(arr,mid+1,r);
            merge(arr,low,mid,r);
        }
        
    }
};
